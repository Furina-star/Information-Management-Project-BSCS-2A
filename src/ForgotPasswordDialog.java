
import Custom_Components.ImageButton;
import Custom_Components.RoundedButton;
import Custom_Components.RoundedPanel;
import Custom_Components.ShowHideButton;
import java.awt.Color;
import java.net.URL;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;


/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */

/**
 *
 * @author bello
 */
public class ForgotPasswordDialog extends javax.swing.JDialog {

    /**
     * Creates new form ForgotPasswordDialog
     */
    public ForgotPasswordDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        URL iconURL = getClass().getResource("/Image Folder/EduHub.png");
        System.out.println("Icon URL: " + iconURL);
        if (iconURL != null) {
            setIconImage(new ImageIcon(iconURL).getImage());
        } else {
            JOptionPane.showMessageDialog(this, "Icon not found!");
        }
    }
    
    ForgotPasswordDialog() {
        this((java.awt.Frame) null, true);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        LoginPanel = new RoundedPanel(35);
        LoginLabel = new javax.swing.JLabel();
        BackButton = new ImageButton();
        CloseButton = new ImageButton();
        showHideButton1 = new ShowHideButton();
        showHideButton2 = new ShowHideButton();
        UsernameTextField = new Custom_Components.RoundTextField();
        NewPasswordTextField = new Custom_Components.RoundPasswordField();
        ConfirmPasswordTextField = new Custom_Components.RoundPasswordField();
        SaveButton = new Custom_Components.RoundedButton();
        FontaineBG = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        LoginPanel.setBackground(new java.awt.Color(255, 255, 255));
        LoginPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        LoginLabel.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        LoginLabel.setText("New Password");
        LoginLabel.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        BackButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image Folder/left-arrow.png"))); // NOI18N
        BackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackButtonActionPerformed(evt);
            }
        });

        CloseButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image Folder/exit-full-screen.png"))); // NOI18N
        CloseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CloseButtonActionPerformed(evt);
            }
        });

        showHideButton1.setText("showHideButton1");
        showHideButton1.setHideIcon(new javax.swing.ImageIcon(getClass().getResource("/Image Folder/eye.png"))); // NOI18N
        showHideButton1.setShowIcon(new javax.swing.ImageIcon(getClass().getResource("/Image Folder/hidden.png"))); // NOI18N
        showHideButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showHideButton1ActionPerformed(evt);
            }
        });

        showHideButton2.setText("showHideButton1");
        showHideButton2.setHideIcon(new javax.swing.ImageIcon(getClass().getResource("/Image Folder/eye.png"))); // NOI18N
        showHideButton2.setShowIcon(new javax.swing.ImageIcon(getClass().getResource("/Image Folder/hidden.png"))); // NOI18N
        showHideButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showHideButton2ActionPerformed(evt);
            }
        });

        UsernameTextField.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image Folder/user.png"))); // NOI18N
        UsernameTextField.setPlaceholderText("Enter Admin ID");

        NewPasswordTextField.setPlaceholderText("New Password");

        ConfirmPasswordTextField.setPlaceholderText("Confirm Password");

        SaveButton.setBackground(new java.awt.Color(0, 153, 255));
        SaveButton.setForeground(new java.awt.Color(255, 255, 255));
        SaveButton.setText("Save Password");
        SaveButton.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        SaveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout LoginPanelLayout = new javax.swing.GroupLayout(LoginPanel);
        LoginPanel.setLayout(LoginPanelLayout);
        LoginPanelLayout.setHorizontalGroup(
            LoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LoginPanelLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(LoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(LoginPanelLayout.createSequentialGroup()
                        .addComponent(BackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 230, Short.MAX_VALUE)
                        .addComponent(CloseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(LoginPanelLayout.createSequentialGroup()
                        .addGroup(LoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(NewPasswordTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ConfirmPasswordTextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(LoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(showHideButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(showHideButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(UsernameTextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(SaveButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(32, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, LoginPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(LoginLabel)
                .addGap(74, 74, 74))
        );
        LoginPanelLayout.setVerticalGroup(
            LoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LoginPanelLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(LoginLabel)
                .addGap(37, 37, 37)
                .addComponent(UsernameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(LoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(showHideButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NewPasswordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(LoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(LoginPanelLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(showHideButton2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(LoginPanelLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(ConfirmPasswordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(53, 53, 53)
                .addComponent(SaveButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 139, Short.MAX_VALUE)
                .addGroup(LoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BackButton)
                    .addComponent(CloseButton))
                .addGap(49, 49, 49))
        );

        LoginPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {NewPasswordTextField, UsernameTextField});

        LoginPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {ConfirmPasswordTextField, SaveButton});

        getContentPane().add(LoginPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(66, 58, -1, -1));

        FontaineBG.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image Folder/FontaineBG.jpeg"))); // NOI18N
        getContentPane().add(FontaineBG, new org.netbeans.lib.awtextra.AbsoluteConstraints(-160, -850, -1, -1));

        setSize(new java.awt.Dimension(968, 785));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void BackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackButtonActionPerformed
        // TODO add your handling code here:
        LoginDialog forgot = new LoginDialog();
        this.dispose();
        forgot.setVisible(true);
    }//GEN-LAST:event_BackButtonActionPerformed

    private void CloseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CloseButtonActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_CloseButtonActionPerformed

    private void showHideButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showHideButton1ActionPerformed
        // TODO add your handling code here:
        if (showHideButton1.isPasswordVisible()) {
            // If it's visible, show the password text
            NewPasswordTextField.setEchoChar((char) 0);
        } else {
            // If it's not visible, hide the password text
            NewPasswordTextField.setEchoChar('*');
        }
    }//GEN-LAST:event_showHideButton1ActionPerformed

    private void showHideButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showHideButton2ActionPerformed
        // TODO add your handling code here:
        if (showHideButton2.isPasswordVisible()) {
            // If it's visible, show the password text
            ConfirmPasswordTextField.setEchoChar((char) 0);
        } else {
            // If it's not visible, hide the password text
            ConfirmPasswordTextField.setEchoChar('*');
        }
    }//GEN-LAST:event_showHideButton2ActionPerformed

    private void SaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveButtonActionPerformed
     String Username = UsernameTextField.getText().trim();
     String newpass = new String (NewPasswordTextField.getPassword());
     String confirmpass = new String (ConfirmPasswordTextField.getPassword());

    if (Username.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Please enter your Username first!");
        return;
    }
    
    if (!newpass.equals(confirmpass)){
        JOptionPane.showMessageDialog(this, "hindi tugma ang imong password dol");
    return;
    }

    Connection conn = null;
    PreparedStatement pst = null;
    ResultSet rs = null;

    try {
        // Connect to database
        conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/learningtracker", "root", "");

        // Query to find password by ID
        String sql = "SELECT Admin_Password FROM admin WHERE Admin_ID = ?";
        pst = conn.prepareStatement(sql);
        pst.setString(1, Username);
        rs = pst.executeQuery();

      
        if (rs.next()) {
            String password = rs.getString("Password");
            sql ="UPDATE admin SET Admin_Password =? WHERE Admin_ID = ? ";
            pst = conn.prepareStatement(sql);
            pst.setString(1,newpass);
            pst.setString(2,Username);
            
            int rowsaffected = pst.executeUpdate();
            if (rowsaffected > 0){
                JOptionPane.showMessageDialog(this, "Sumakses ang imong password");
            }else{
                JOptionPane.showMessageDialog(this,"Hindi sumakses ang imong password");
            }
            
            
        } else {
            JOptionPane.showMessageDialog(this, "Username not found!");
        }

    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(this, "Database Error: " + ex.getMessage());
    } finally {//ensures that the database resources like rs, pst, and conn wont always be open even after the program is executed already.
        try {
            if (rs != null) rs.close();
            if (pst != null) pst.close();
            if (conn != null) conn.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
        
        
        
    }//GEN-LAST:event_SaveButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ForgotPasswordDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ForgotPasswordDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ForgotPasswordDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ForgotPasswordDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ForgotPasswordDialog dialog = new ForgotPasswordDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackButton;
    private javax.swing.JButton CloseButton;
    private Custom_Components.RoundPasswordField ConfirmPasswordTextField;
    private javax.swing.JLabel FontaineBG;
    private javax.swing.JLabel LoginLabel;
    private javax.swing.JPanel LoginPanel;
    private Custom_Components.RoundPasswordField NewPasswordTextField;
    private Custom_Components.RoundedButton SaveButton;
    private Custom_Components.RoundTextField UsernameTextField;
    private Custom_Components.ShowHideButton showHideButton1;
    private Custom_Components.ShowHideButton showHideButton2;
    // End of variables declaration//GEN-END:variables
}
