import DataBaseConnection.Connector;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
/**
 *
 * @author domin
 */
public class UnAssignStud extends javax.swing.JDialog {

    /**
     * Creates new form UnAssignStud
     */
    public UnAssignStud(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        PopulatestudwithsubCB();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        studentComboBox = new Custom_Components.ComboBox();
        jButton2 = new javax.swing.JButton();
        confirmunassign = new Custom_Components.RoundedButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 51, 51));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("UNASSIGN STUDENT");

        studentComboBox.setLabeText("Select here");

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image Folder/left-arrow.png"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        confirmunassign.setText("Confirm");
        confirmunassign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmunassignActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addComponent(jButton2)
                .addGap(66, 290, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(107, 107, 107)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(studentComboBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(144, 144, 144)
                        .addComponent(confirmunassign, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(107, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(studentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58)
                .addComponent(confirmunassign, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(30, 30, 30))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void confirmunassignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmunassignActionPerformed
String selected = studentComboBox.getSelectedItem().toString();
int subjectID;
String studentName;

try {
    subjectID = Integer.parseInt(selected.split(" - ")[0].trim());
    studentName = selected.split(" - ")[1].trim();
} catch (Exception ex) {
    JOptionPane.showMessageDialog(this, "Invalid selection.");
    return;
}

// Lookup StudentID from name
int studentID;
try (Connection con = Connector.getConnection()) {
    String studentSQL = "SELECT StudentID FROM student WHERE CONCAT(LastName, ', ', FirstName) = ?";
    PreparedStatement studentPst = con.prepareStatement(studentSQL);
    studentPst.setString(1, studentName);
    ResultSet rs = studentPst.executeQuery();

    if (rs.next()) {
        studentID = rs.getInt("StudentID");
    } else {
        JOptionPane.showMessageDialog(this, "Student not found.");
        return;
    }
} catch (SQLException ex) {
    JOptionPane.showMessageDialog(this, "Error finding student: " + ex.getMessage());
    ex.printStackTrace();
    return;
}

int confirm = JOptionPane.showConfirmDialog(this,
    "Unassign " + studentName + " from Subject ID " + subjectID + "?",
    "Confirm Unassign",
    JOptionPane.YES_NO_OPTION);

if (confirm != JOptionPane.YES_OPTION) return;

// Delete from join table
try (Connection con = Connector.getConnection()) {
    String deleteSQL = "DELETE FROM student_subject WHERE StudentID = ? AND SubjectID = ?";
    PreparedStatement pst = con.prepareStatement(deleteSQL);
    pst.setInt(1, studentID);
    pst.setInt(2, subjectID);
    int affected = pst.executeUpdate();

    if (affected > 0) {
        JOptionPane.showMessageDialog(this, "Student unassigned successfully!");
        dispose();
    } else {
        JOptionPane.showMessageDialog(this, "No matching assignment found.");
    }
} catch (SQLException ex) {
    JOptionPane.showMessageDialog(this, "Error unassigning student: " + ex.getMessage());
    ex.printStackTrace();
}
        // TODO add your handling code here:
    }//GEN-LAST:event_confirmunassignActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed
private void PopulatestudwithsubCB(){

try (Connection con = Connector.getConnection()) {
    String sql = "SELECT DISTINCT ss.SubjectID, s.FirstName, s.LastName " +
                 "FROM student s JOIN student_subject ss ON s.StudentID = ss.StudentID";
    PreparedStatement pst = con.prepareStatement(sql);
    ResultSet rs = pst.executeQuery();

    studentComboBox.removeAllItems();

    while (rs.next()) {
        int subjectID = rs.getInt("SubjectID");
        String name = rs.getString("LastName") + ", " + rs.getString("FirstName");
        studentComboBox.addItem(subjectID + " - " + name);
    }
} catch (SQLException ex) {
    JOptionPane.showMessageDialog(this, "Error loading students: " + ex.getMessage());
    ex.printStackTrace();
}
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UnAssignStud.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UnAssignStud.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UnAssignStud.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UnAssignStud.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                UnAssignStud dialog = new UnAssignStud(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private Custom_Components.RoundedButton confirmunassign;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private Custom_Components.ComboBox studentComboBox;
    // End of variables declaration//GEN-END:variables
}
