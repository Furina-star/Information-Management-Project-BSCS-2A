import DataBaseConnection.Connector;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import Custom_Components.RoundedPanel;
/**
 *
 * @author domin
 */
public class UpdateAssessment extends javax.swing.JDialog {

    /**
     * Creates new form UpdateAssessment
     */
    public UpdateAssessment(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        populateAssessmentComboBox();
        
    }

    UpdateAssessment() {
        this((java.awt.Frame) null, true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        titleField = new Custom_Components.RoundTextField();
        typeField = new Custom_Components.RoundTextField();
        maxScoreField = new Custom_Components.RoundTextField();
        dateField = new Custom_Components.RoundTextField();
        roundedButton1 = new Custom_Components.RoundedButton();
        TitleLabel = new javax.swing.JLabel();
        jPanel3 = new RoundedPanel(20);
        assessmentComboBox = new Custom_Components.ComboBox();
        BackButton = new Custom_Components.RoundedButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        titleField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        titleField.setPlaceholderText("Title ");

        typeField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        typeField.setPlaceholderText("Type");

        maxScoreField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        maxScoreField.setPlaceholderText("Max Score ");

        dateField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        dateField.setPlaceholderText("Date Given ");

        roundedButton1.setBackground(new java.awt.Color(72, 130, 237));
        roundedButton1.setForeground(new java.awt.Color(255, 255, 255));
        roundedButton1.setText("Update");
        roundedButton1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        roundedButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roundedButton1ActionPerformed(evt);
            }
        });

        TitleLabel.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        TitleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TitleLabel.setText("Update Assessment");
        TitleLabel.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        jPanel3.setBackground(new java.awt.Color(72, 130, 237));

        assessmentComboBox.setLabeText("Select Assessment");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(assessmentComboBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .addComponent(assessmentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        BackButton.setBackground(new java.awt.Color(72, 130, 237));
        BackButton.setForeground(new java.awt.Color(255, 255, 255));
        BackButton.setText("Back");
        BackButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        BackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TitleLabel)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addComponent(BackButton, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                            .addComponent(roundedButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(dateField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(maxScoreField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(typeField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(titleField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(46, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(TitleLabel)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(titleField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(typeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(maxScoreField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(dateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(69, 69, 69)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(roundedButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(79, 79, 79))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(450, 545));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void roundedButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roundedButton1ActionPerformed

        String selected = assessmentComboBox.getSelectedItem().toString();
        int assessmentID;
        try {
            assessmentID = Integer.parseInt(selected.split(" - ")[0].trim());
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Invalid assessment selection.");
            return;
        }

        String title = titleField.getText().trim();
        String type = typeField.getText().trim();
        String maxScoreText = maxScoreField.getText().trim();
        String dateText = dateField.getText().trim();

        if (title.isEmpty() || type.isEmpty() || dateText.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Title, Type, and Date are required.");
            return;
        }

        if (!type.equals("Quiz") && !type.equals("Exam") && !type.equals("Assignment") && !type.equals("Project")) {
            JOptionPane.showMessageDialog(this, "Invalid type. Use: Quiz, Exam, Assignment, or Project.");
            return;
        }

        int maxScore;
        try {
            maxScore = maxScoreText.isEmpty() ? 0 : Integer.parseInt(maxScoreText);
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Max Score must be a number.");
            return;
        }

        // Validate yyyy-MM-dd strictly and keep as String
        java.util.Date parsedDate;
        try {
            java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat("yyyy-MM-dd");
            sdf.setLenient(false);
            parsedDate = sdf.parse(dateText);
        } catch (java.text.ParseException ex) {
            javax.swing.JOptionPane.showMessageDialog(this, "Invalid date format. Use yyyy-MM-dd.");
            return;
        }
        String dateOnly = new java.text.SimpleDateFormat("yyyy-MM-dd").format(parsedDate);

        try (java.sql.Connection con = DataBaseConnection.Connector.getConnection()) {
            String updateSQL = "UPDATE assessment SET Title = ?, Type = ?, MaxScore = ?, DateGiven = ? WHERE AssessmentID = ?";
            java.sql.PreparedStatement pst = con.prepareStatement(updateSQL);
            pst.setString(1, title);
            pst.setString(2, type);
            pst.setInt(3, maxScore);
            pst.setString(4, dateOnly);     // was pst.setDate(4, sqlDate)
            pst.setInt(5, assessmentID);
            pst.executeUpdate();

            javax.swing.JOptionPane.showMessageDialog(this, "Assessment updated successfully!");
            dispose();
        } catch (java.sql.SQLException ex) {
            javax.swing.JOptionPane.showMessageDialog(this, "Update failed: " + ex.getMessage());
            ex.printStackTrace();
        }

    }//GEN-LAST:event_roundedButton1ActionPerformed

    private void BackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackButtonActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_BackButtonActionPerformed
private void populateAssessmentComboBox() {
    assessmentComboBox.removeAllItems();
    try (Connection con = Connector.getConnection()) {
        String sql = "SELECT AssessmentID, Title FROM assessment";
        PreparedStatement pst = con.prepareStatement(sql);
        ResultSet rs = pst.executeQuery();
        while (rs.next()) {
            int id = rs.getInt("AssessmentID");
            String title = rs.getString("Title");
            assessmentComboBox.addItem(id + " - " + title);
        }
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(this, "Error loading assessments: " + ex.getMessage());
        ex.printStackTrace();
    }
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UpdateAssessment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UpdateAssessment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UpdateAssessment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UpdateAssessment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                UpdateAssessment dialog = new UpdateAssessment(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private Custom_Components.RoundedButton BackButton;
    private javax.swing.JLabel TitleLabel;
    private Custom_Components.ComboBox assessmentComboBox;
    private Custom_Components.RoundTextField dateField;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private Custom_Components.RoundTextField maxScoreField;
    private Custom_Components.RoundedButton roundedButton1;
    private Custom_Components.RoundTextField titleField;
    private Custom_Components.RoundTextField typeField;
    // End of variables declaration//GEN-END:variables
}
